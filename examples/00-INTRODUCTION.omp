; OM File Header - Saved 2023/04/23 13:40:02
; (7.02 :patc (om-make-point 335 186) (om-make-point 49 50) (om-make-point 1256 666) "" 183 0 nil "2023/04/23 13:40:02")
; End File Header
; External resources 
; (list (list (quote :picture) "#P\"../../resources/pict/01\""))
(in-package :om)(load-lib-for (quote ("Infinity")))(setf *om-current-persistent* (om-load-patch1 "00-INTRODUCTION" (quote ((let ((box (om-load-boxcall (quote genfun) "INFINITY-SERIES" (quote infinity::infinity-series) (quote ((om-load-inputfun (quote input-funbox) "List of midics" "MIDICS" (list 6700 6800)) (om-load-inputfun (quote input-funbox) "Number of notes" "N" 4096))) (om-make-point 38 481) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "INFINITY-CANONS" (quote infinity::infinity-canons) (quote ((om-load-inputfun (quote input-funbox) "List of midics" "INFINITY-SERIES" (list 6700 6800 6600 6900 6800 6700 6500 7000 6600 6900 6700 6800)))) (om-make-point 187 481) nil nil nil nil 4))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment 2" (om-make-point 277 29) (quote "Select a funtion and press \"t\" for tutorials.") "" (om-make-point 103 566) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 745 135) (quote "                                                 INFINITY LIBRARY FOR OM$$$REFERENCES$$Per Norgard. INSIDE A SYMPHONY (1974)$Available at: http://www5.kb.dk/export/sites/kb_dk/da/nb/dcm/udgivelser/norgard/artikler/InsideASymphony.1975.pdf$") "" (om-make-point 498 47) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote nil) (list (let ((newpict (make-instance (quote patch-picture) :name "01" :source (quote user) :pict-pathname (restore-pict-path (restore-path nil)) :thepict (om-get-picture "01" (quote user)) :storemode :external :draw-params (quote (p 0 0 100 100)) :extraobjs nil))) (setf (pict-pos newpict) (om-make-point 30 48)) (setf (pict-size newpict) (om-make-point 435 375)) newpict)) 7.02))